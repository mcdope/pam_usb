#!/bin/sh
#
# Copyright (c) 2021 Tobias BÃ¤umer <tobiasbaeumer@gmail.com>
#
# This file is part of the pam_usb project. pam_usb is free software;
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License version 2, as published by the Free Software Foundation.
#
# pam_usb is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 51 Franklin
# Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Check for valid authentication
pamusb-check `whoami` > /dev/null 2>&1 || (logger -p local0.error -t ${0##*/}[$$] pamusb-check failed. && exit 1)

# Check if password file exists, first try $HOME then the auth device
if [ ! -f ~/.keyring_unlock_password ]; then
    #   Get UUID for auth device
    UUID=`pamusb-check \`whoami\` 2>&1 | grep "Searching for volume with uuid" | awk '{print $7}' | sed -e "s/\.//g"`
    #   Get mountpoint for UUID
    MOUNTPOINT=`findmnt -rn -S UUID=$UUID -o TARGET`
    
    #   Check for keyfile on auth device
    if [ -f $MOUNTPOINT/.keyring_unlock_password ]; then
        KEYFILE=$MOUNTPOINT/.keyring_unlock_password

        MOUNTPOINT_FS=`df -T | grep $MOUNTPOINT | awk '{print $2}'`
        case "$MOUNTPOINT_FS" in
        *fat*) SUPPORTS_ACCESS_RIGHTS=0 ;;
        *ntfs*) SUPPORTS_ACCESS_RIGHTS=0 ;;
        *) SUPPORTS_ACCESS_RIGHTS=1 ;;
        esac
    else
        logger -p local0.notice -t ${0##*/}[$$] No password file found, exiting.
        exit 0
    fi
else
    SUPPORTS_ACCESS_RIGHTS=1
    KEYFILE=~/.keyring_unlock_password
fi

# Ensure file has 0600 (if FS supports it)
PERMISSIONS=`stat -c "%a %n" $KEYFILE | awk '{print $1}'`
if [ "$SUPPORTS_ACCESS_RIGHTS" = "1" ] && [ ! "$PERMISSIONS" = "600" ]; then
    logger -p local0.error -t ${0##*/}[$$] Bad permissions on $KEYFILE. Please change them to 0600.
    exit 1
fi

# Kill existing keyring instance
killall -q gnome-keyring-daemon

# Read UNLOCK_PASSWORD from $KEYFILE
. $KEYFILE

# Perform unlock
echo -n $UNLOCK_PASSWORD | gnome-keyring-daemon --daemonize --login \
    && gnome-keyring-daemon --start  > /dev/null 2>&1; UNLOCKED=$? \
    && logger -p local0.notice -t ${0##*/}[$$] Keyring unlocked. \
    || logger -p local0.error -t ${0##*/}[$$] Keyring unlock failed.

exit $UNLOCKED
